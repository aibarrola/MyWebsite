<%- include ("../partials/header") %>

<div class="ui grid">

<div class="five wide centered column row">
    <h1 class="projectHeader"> Mentorship Pairing Tool </h1>
    <img src="/images/projects/pairingtool/pairingtooldemo.gif">
</div>


    <div class="contain three column row">

            <div class="center column">
                <h1> Situation </h1>
                    <div class="ui segment">
                        <h4>
                            The mentorship program are for new members to sign up as little brother/sister and for older members to sign up as big brother/sister. When they sign up, they fill out a detailed application that asks them about their interest, personality, life experience, and more. A committee then looks at these applications and pairs up a little with a big that can help mentor and guide them through college and life. This pairing process is long and tedious as the committee has to go through every application multiple times one by one to make sure they get the best pairing. This is just messy, inefficient, and difficult. This tool will allow more quality pairings and give more time for the committee to focus on other aspects of the application.
                        </h4>
                    </div>
            </div>

            <div class="center column">
                <h1> Challenges </h1>
                    <div class="ui segment">
                        <h3> We had to figure out the best algorithm or data structure that best fits our model. We narrowed it down between: Radix sort, Priority Queue using heaps, and Bipartite matching algorithm. We decided with Radix sort because it has a time complexity of O(n) and it works with our model since it will always be a fixed number of bigs/littles. However, it takes more memory.  </h3>
                    </div>
            </div>

            <div class="center column">
                <h1> Personal Impact </h1>
                    <div class="ui segment">
                        <h4>
                            <h3> Increased accuracy of compatibilities by 10% by adding a dynamic factor to the algorithm</h3>
                            <h3> Created the algorithm and point system that would determine compatibility between a big and little based on interests </h3>
                        </h4>
                    </div>
            </div>
        
    </div>



</div>





<%- include ("../partials/footer") %>